# Doctor CRUD APIs
register:
  put:
    tags:
      - doctor
      - register
    description: Creates a doctor. Only for admins.
    parameters:
      - name: info
        in: body
        schema:
          required:
            - name
            - email
            - registration_id
          $ref: '#/doctor_definitions/doctor_info'
    responses:
      200:
        description: Succcess   
      default:
        description: Error Response
        schema:
          $ref: './definitions.yml#/error'
update:
  post:
    tags:
      - doctor
      - update
    parameters:
      - name: info
        in: body
        schema:
          required:
            - id
          $ref: '#/doctor_definitions/doctor_info'
    responses:
      200:
        description: Update successful
      default:
        description: Error
        schema:
          $ref: './definitions.yml#/error'
find:
  get:
    tags:
      - doctor
      - read
    parameters:
      - name: id
        in: query
        type: integer
        description: System id number
      - name: name_containing
        in: query
        type: string
        description: find doctors with name containing this string
      - name: page
        in: query
        type: integer
        description: pagination parameter, must be greater than 1
        default: 1
      - name: size
        in: query
        type: integer
        description: page size
        default: 10
    responses:
      200:
        description: List of matched doctors
        schema:
          type: object
          properties:
            doctors:
              type: array
              items:
                $ref: './doctor_crud_api.yml#/doctor_definitions/doctor_info'
      default:
        description: Error response
        schema:
          $ref: './definitions.yml#/error'
remove:
  delete:
    tags:
      - doctor
      - delete
    parameters:
      - name: id
        in: query
        required: true
        type: integer
    responses:
      200:
      default:
        description: Error response
        schema:
          $ref: './definitions.yml#/error'
review_registration_application:
  post:
    tags:
      - doctor
      - for_admin
    description: "Endpoint to approve or deny doctors registration application.
      Use link to review:https://www.nmc.org.in/information-desk/indian-medical-register/"
    parameters:
      - name: review
        in: body
        required: true
        schema:
          type: object
          required:
            - application_id
            - approve
          properties:
            application_id:
              description: Registration application id
              type: integer
            approve:
              type: boolean
            reviewer_comments:
              type: string
              description: reason for decision taken
    responses:
      200:
        description: Success
      default:
        description: Error reqsponse
        schema:
          $ref: './definitions.yml#/error'
registration_application:
  post:
    tags:
      - doctor
      - register
    description: This endpoint raises request for doctor registration which is to be approved or denied by reviewer later.
    parameters:
      - name: application
        in: body
        required: true
        schema:
          type: object
          properties:
            doctor_info:
              required:
                - name
                - email
                - registration_id
                - password
              $ref: './doctor_crud_api.yml#/doctor_definitions/doctor_info'
            additional_info:
              type: string
              description: Additional info regarding application, applicant etc
    responses:
      200:
        description: Succcess   
      default:
        description: Error Response
        schema:
          $ref: './definitions.yml#/error'
view_pending_registration_application:
  get:
    tags:
      - doctor
      - register
      - for_admin
    description: API to view pending applications
    parameters:
      - name: name_like
        type: string
        in: query
        description: Search for names similar to the param (case insensitive)
      - name: applied_after
        type: string
        in: query
        description: 'Get application applied after this param.Date-time string in format YYYY-MM-DD hh:mm:ss'
      - name: applied_before
        type: string
        in: query
        description: 'Get application applied before this param.Date-time string in format YYYY-MM-DD hh:mm:ss'
      - name: page_size
        type: integer
        default: 10
        in: query
        required: true
        description: Pagination arguments. Empty page or page-size < page_size implies end of returned data.
      - name: page
        type: integer
        default: 1
        in: query
        required: true
        description: Pagination arguments. Empty page or page-size < page_size implies end of returned data.
      - name: sort
        type: string
        in: query
        enum: [asc, desc]
        default: asc
        required: true
        description: sort order, result is sorted by applied_on time of application.
    responses:
      200:
        description: List of matched doctor applications
        schema:
          type: object
          properties:
            applications:
              type: array
              items:
                $ref: './doctor_crud_api.yml#/doctor_definitions/registration_application'
      default:
        description: Error Response
        schema:
          $ref: './definitions.yml#/error'
login:
  get:
    tags: 
      - doctor
      - login
      - auth
    description: Login API
    parameters:
      - name: email
        type: string
        required: true
        in: query
      - name: password
        type: string
        required: true
        in: query
    responses:
      200:
        description: "details of logged in doc. password field of the doctor-object contains session-id, this is a case of semantics abuse"
        schema:
          type: object
          properties:
            doctor:
              $ref: './doctor_crud_api.yml#/doctor_definitions/doctor_info'
            session_id:
              type: string
      default:
        description: Error reqsponse
        schema:
          $ref: './definitions.yml#/error'
online:
  post:
    tags:
      - doctor
    parameters:
      - name: req
        in: body
        schema:
          type: object
          required:
            - session_id
            - doctor_id
            - status
          properties:
            session_id:
              type: string
              description: session-id as returned from login API, must be hit periodically to keep user online
            doctor_id:
              type: integer
            status:
              type: string
              description: visibility status ONLINE/OFFLINE, provided for extension purposes only
              enum: [ONLINE, OFFLINE]
              default: ONLINE
    responses:
      200:
        description: "Doctor is online for next 2 minute atleast."
      default:
        description: Error reqsponse
        schema:
          $ref: './definitions.yml#/error'

patients:
  get:
    tags:
      - doctor
      - patient
    description: Fetch patient related to doctor
    parameters:
      - name: doctor_id
        type: integer
        required: true
        in: query
      - name: page
        type: integer
        default: 1
        required: true
        in: query
      - name: page_size
        type: integer
        default: 10
        required: true
        in: query
    responses:
      200:
        description: List of patients previously treated by the doctor
        schema:
          type: object
          properties:
            patients:
              type: array
              items:
                $ref: './patient_crud_api.yml#/definitions/patient_info'
      default:
        description: Error reqsponse
        schema:
          $ref: './definitions.yml#/error'

doctor_definitions:
  doctor_info:
    type: object
    properties:
      id:
        description: internal system id as returned by other services.
        type: integer
      name:
        type: string
      email:
        type: string
      phone:
        type: string
      about:
        type: string
      profile_picture_id:
        type: integer
        description: system id for profile picture
      registration_id:
        description: 'Certification id, for practice license'
        type: string
      password:
        description: password for doctor. only present in requests never in response.
        type: string
  registration_application:
    type: object
    properties:
      id:
        type: integer
        description: application id, to be used in review processes (don't use as doctor's id)
      name:
        type: string
      email:
        type: string
      comments:
        type: string
      reviewer_comments:
        type: string
      applied_on:
        type: string
      registration_number:
        type: string